{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11420\viewh10340\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ; Binary to Decimal Converter (8-bit Assembly Version)\
; Computer's Architecture - Lucas Darlindo F. Rodrigues\
;-------------------------------------------------------\
; msb_1 msb_2 msb_3 msb_4 lsb_1 lsb_2 lsb_3 lsb_4\
;   0     0     0     0     1     0     1     0\
;-------------------------------------------------------\
	JMP start\
; Editar os valores bin\'e1rios nas constantes abaixo\
msb_1: DB 1\
msb_2: DB 1\
msb_3: DB 1\
msb_4: DB 1\
lsb_1: DB 1\
lsb_2: DB 1\
lsb_3: DB 1\
lsb_4: DB 1\
;-------------------------------------------------------\
; Execu\'e7\'e3o da rotina de convers\'e3o\
start:\
	MOV A, [lsb_4]\
	MUL 1\
	PUSH A\
\
	MOV A, [lsb_3]\
	MUL 2\
	PUSH A\
\
	MOV A, [lsb_2]\
	MUL 4\
	PUSH A\
\
	MOV A, [lsb_1]\
	MUL 8\
	PUSH A\
\
	MOV A, [msb_4]\
	MUL 16\
	PUSH A\
\
	MOV A, [msb_3]\
	MUL 32\
	PUSH A\
\
	MOV A, [msb_2]\
	MUL 64\
	PUSH A\
\
	MOV A, [msb_1]\
	MUL 128\
	PUSH A\
;-------------------------------------------------------\
; Resultado final em decimal\
conversion:\
	POP A\
	POP B\
	POP C\
	ADD A, B\
	ADD A, C\
	POP B\
	POP C\
	POP D\
	ADD A, B\
	ADD A, C\
	ADD A, D\
	POP B\
	POP C\
	ADD A, B\
	ADD A, C\
;-------------------------------------------------------\
; Fim da execu\'e7\'e3o\
HLT}