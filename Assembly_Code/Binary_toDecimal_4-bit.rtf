{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ; Binary to Decimal Converter (4-bit Assembly Version)\
; Computer's Architecture - Lucas Darlindo F. Rodrigues\
; 8-Bit Assembler Simulator\
\
; msb_1 msb_2 lsb_1 lsb_2\
;   1     0     1     0\
\
	JMP converts\
; Editar os valores bin\'e1rios nas constantes abaixo\
msb_1: DB 1\
msb_2: DB 1\
lsb_1: DB 1\
lsb_2: DB 1\
\
; Execu\'e7\'e3o da rotina de convers\'e3o\
converts:\
	MOV A, [lsb_2]\
	MUL 1\
	PUSH A\
\
	MOV A, [lsb_1]\
	MUL 2\
	PUSH A\
\
	MOV A, [msb_2]\
	MUL 4\
	PUSH A\
\
	MOV A, [msb_1]\
	MUL 8\
	PUSH A\
\
; Resultado final em decimal\
order:\
	POP D\
	POP C\
	POP B\
	POP A\
sum:\
	ADD A, B\
	ADD A, C\
	ADD A, D\
\
; Fim da execu\'e7\'e3o\
HLT}