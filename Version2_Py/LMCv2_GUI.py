# Developed by....: Lucas Darlindo Freitas Rodrigues (lucas.darlindo@gmail.com) and Octacílio Carvalho de Almeida (octa.oca44@gmail.com)
# Institution.....: Federal University of Western Para :: Institute of Engineering and Geosciences (IEG)
# Course..........: Bacharelor on Computer Science (2018)
# Source Code.....: Apr 01, 2019 - 02:30 AM (Brasilia Standard Time: GMT-3) :: Programmed in C
# Actual Code.....: Jun 14, 2019 - 16:00 AM (Brasilia Standard Time: GMT-3) :: Programmed in Python
# Module..........: LMC's User Interface Module

import LMCv2_Core as core
import time

def startup():
    core.clear()
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print("|--------------------------- Desenvolvido por: Lucas Darlindo F. Rodrigues e Octacílio C. de Almeida --------------------------|")
    print("|                                                                                                                              |")
    print("|--------------------------------------------------- Tecle ENTER para continuar -----------------------------------------------|")
    input()

def menu():
    core.clear()
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|-------------------------------------------------------- MENU PRINCIPAL ------------------------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")    
    print("|                                  |1|    Exibir tabela de regras para as somas binárias                                       |")
    print("|                                  |2|               Realizar uma soma binária                                                 |")
    print("|                                  |3|          Vericar a validade da soma binária                                             |")
    print("|                                  |4|            Conversor Binário para Decimal                                               |")
    print("|                                  |5|            Conversor Decimal para Binário                                               |")
    print("|                                  |6|              Complemento binário de dois                                                |")
    print("|                                  |7|          Conversor Binário para Hexadecimal                                             |")
    print("|                                  |8|        Binário com Ponto Flutuante (IEEE 754)                                           |")
    print("|                                  |9|          Exibir a Arquitetura de Von Neumann                                            |")
    print("|                                  |0|                  Encerrar o programa                                                    |")
    print("|______________________________________________________________________________________________________________________________|")
    core.userInput()

def askUser():
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")
    print("|------------------------------------------------- Deseja retornar para o menu? -----------------------------------------------|")
    print("|------------------------------------------------------ (1) Sim | (0) Não -----------------------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")

def inputWait():
    time.sleep(1)
    print("|                                                                                                                              |")
    print("|--------------------------------------------------- Tecle ENTER para continuar -----------------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    input()

def binaryRules():
    core.clear()
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")  
    print("|----------------------------------------- Conjunto de regras para soma entre binários ----------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                   |                   |                   |                                    |                             |")    
    print("|     Regra Nº1     |     Regra Nº2     |     Regra Nº3     |              Regra Nº4             |          Regra Nº5          |")
    print("|     0 + 0 = 0     |     1 + 0 = 1     |     0 + 1 = 1     |          1 + 1 = 0 (vai um)        |     1 + 1 + 1 = 1 (vai um)  |")
    print("|--- Exemplo Nº1 ---|--- Exemplo Nº2 ---|--  Exemplo Nº3 ---|------------ Exemplo Nº4 -----------|-------- Exemplo Nº5 --------|")
    print("|                   |                   |                   |                                    |       0001 (1)              |")
    print("|      0000 (0)     |      0001 (1)     |      0000 (0)     |          0010 (2)   00¹00          |       0011 (3)  000¹1       |")
    print("|     +0010 (2)     |     +0010 (2)     |     +0101 (5)     |         +0010 (2)                  |       0001 (1)  001 0       |")
    print("|___________________|___________________|___________________|____________________________________|_____________________________|")
    print("|                   |                   |                   |                                    |                             |")
    print("|      0010 (2)     |      0011 (3)     |      0101 (5)     |               0100 (4)             |          0101 (5)           |")
    print("|___________________|___________________|___________________|____________________________________|_____________________________|")

def ieee754():
    core.clear()
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|--------------------------------------------------------- MENU IEEE 754 ------------------------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")
    print("|                                  |1|          IEEE 754: Precisão Simples   (32 Bits)                                         |")
    print("|                                  |2|          IEEE 754: Precisão Dupla     (64 Bits)                                         |")
    print("|                                  |3|          IEEE 754: Precisão Quadrupla (128 Bits)                                        |")
    print("|                                  |4|          IEEE 754: Precisão Octupla   (256 Bits)                                        |")
    print("|                                  |5|          IEEE 754: Representação Gráfica                                                |")
    print("|                                  |0|                       Retornar                                                          |")
    print("|______________________________________________________________________________________________________________________________|")
    core.userInput(args='8')

def vonNeumann():
    core.clear()
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|------------------------------------------ Representação da Arquitetura de Von Neumann ---------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")    
    print("|                         _CPU____________________________________                       _________________                     |")
    print("|                        |              Registradores             |                    -|                 |-                   |")    
    print("|                        |      ____________________________      | Dados + Instruções -|                 |-                   |")
    print("|                        |     |      |       |       |     |     | <----------------> -|                 |-                   |")    
    print("|                        |     |  PC  |       |       |     |     |                    -|                 |-                   |")    
    print("|                        |     |______|_______|_______|_____|     |                    -|                 |-                   |")    
    print("|                        |     |      |       |       |     |     |                    -|     Memória     |-                   |")
    print("|                        |     |      |       |       |     |     |                    -|      -----      |-                   |")    
    print("|                        |     |______|_______|_______|_____|     |                    -|    Principal    |-                   |")
    print("|                        | ___         ___          ____________  |                    -|                 |-                   |")    
    print("|                        | \  \_______/  /         |            | |                    -|                 |-                   |")    
    print("|                        |  \           / <------> | Unidade de | |     Endereços      -|                 |-                   |")    
    print("|                        |   \   ALU   /  <------> |  Controle  | | <----------------> -|                 |-                   |")    
    print("|                        |    \_______/            |____________| |                    -|                 |-                   |")    
    print("|                        |________________________________________|                    -|_________________|-                   |")
    print("|                                             /\                                                                               |")    
    print("|                                            /  \                                                                              |")    
    print("|                                           /_  _\                                                                             |")
    print("|                                            _||_                          ___________________________________________         |")
    print("|                                            \  /                         |   Sigla            Legenda                |        |")
    print("|                                             \/                          |  - CPU: Unidade Central de Processamento  |        |")    
    print("|                         _______________________________________         |  - ALU: Unidade Lógica e Aritmética       |        |")    
    print("|                        |                                       |        |  - PC.: Contador de Programa              |        |")  
    print("|                        |          Sistema de E/S (IO)          |        |  - IO.: Sistema de Entrada e Saída        |        |")  
    print("|                        |_______________________________________|        |___________________________________________|        |")  
    print("|                                                                                                                              |")  
    print("|______________________________________________________________________________________________________________________________|")

def ieeeRep():
    core.clear()
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|---------------------------------------- Representação das partes presentes na IEEE 754 --------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")    
    print("|                       Sinal             Expoente                                         Mantissa                            |")    
    print("|                       _____ ___________________________________ _________________________________________________________    |")    
    print("|  Precisão Simples    |     |                                   |                                                         |   |")    
    print("|    ------------      |  0  |         0 0 0 0 0 0 0 0           |      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      |   |")    
    print("|       32-Bit         |_____|___________________________________|_________________________________________________________|   |")    
    print("|                       1-bit               8-bit                                           23-bit                             |")    
    print("|                                                                                                                              |")    
    print("|                                                                                                                              |")    
    print("|                       Sinal             Expoente                                         Mantissa                            |")    
    print("|                       _____ ___________________________________ _________________________________________________________    |")    
    print("|   Precisão Dupla     |     |                                   |                                                         |   |")    
    print("|    ------------      |  0  |      0 0 0 0 0 0 0 0 0 0 0        | 0000000000000000000000000000000000000000000000000000000 |   |")    
    print("|       64-Bit         |_____|___________________________________|_________________________________________________________|   |")    
    print("|                       1-bit              11-bit                                           52-bit                             |")
    print("|                                                                                                                              |")    
    print("|______________________________________________________________________________________________________________________________|")
    inputWait()
    core.clear()

    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|---------------------------------------- Representação das partes presentes na IEEE 754 --------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")    
    print("|                                                      Sinal       Expoente                                                    |")
    print("|                                                      _____ _____________________                                             |")
    print("|   Precisão Quadrupla                                |     |                     |                                            |")    
    print("|     -------------                                   |  0  |   000000000000000   |                                            |")    
    print("|        128-Bit                                      |_____|_____________________|                                            |")    
    print("|                                                      1-bit        15-bit                                                     |")
    print("|                                                                                                                              |")    
    print("|                                                              Mantissa                                                        |")    
    print("|      ___________________________________________________________________________________________________________________     |")    
    print("|     |                                                                                                                   |    |")    
    print("|     | 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |    |")    
    print("|     |___________________________________________________________________________________________________________________|    |")    
    print("|                                                            113-bit                                                           |")
    print("|______________________________________________________________________________________________________________________________|")
    inputWait()
    core.clear()

    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")
    print("|---------------------------------------- Representação das partes presentes na IEEE 754 --------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")
    print("|                                                      Sinal         Expoente                                                  |")
    print("|                                                      _____ _________________________                                         |")
    print("|   Precisão Óctupla                                  |     |                         |                                        |")
    print("|     -------------                                   |  0  |   0000000000000000000   |                                        |")
    print("|        256-Bit                                      |_____|_________________________|                                        |")
    print("|                                                      1-bit          19-bit                                                   |")
    print("|                                                                                                                              |")
    print("|                                                              Mantissa                                                        |")
    print("|      ___________________________________________________________________________________________________________________     |")
    print("|     |                                                                                                                   |    |")
    print("|     | 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |    |")
    print("|     | 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |    |")
    print("|     | 00000000000                                                                                                       |    |")
    print("|     |___________________________________________________________________________________________________________________|    |")
    print("|                                                            237-bit                                                           |")
    print("|______________________________________________________________________________________________________________________________|")
    

def binaryAdder(f_bin, s_bin, res_bin):
    core.clear()
    r_bin = str(res_bin).zfill(8)
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|--------------------------------------------------------- Soma Binária -------------------------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")
    print("|      F1 [LSB] ----> F2 [LSB] ----> F3 [LSB] ----> F4 [LSB] ----> F5 [MSB] ----> F6 [MSB] ----> F7 [MSB] ----> F8 [MSB]       |")
    print("|    ____________   ____________   ____________   ____________   ____________   ____________   ____________   ____________     |")
    print("|             #             #             #             #             #             #             #             #              |")
    print("|      " + f_bin + "       " + f_bin + "       " + f_bin + "       " + f_bin + "       " + f_bin + "       " + f_bin + "       " + f_bin + "       " + f_bin + "       |")
    print("|      " + s_bin + "       " + s_bin + "       " + s_bin + "       " + s_bin + "       " + s_bin + "       " + s_bin + "       " + s_bin + "       " + s_bin + "       |")
    print("|    ____________   ____________   ____________   ____________   ____________   ____________   ____________   ____________     |")    
    print("|                                                                                                                              |")    
    print("|             " + r_bin[len(r_bin)-1:]+ "             " + r_bin[len(r_bin)-2:]+ "            " + r_bin[len(r_bin)-3:]+ "           " + r_bin[len(r_bin)-4:]+ "          " + r_bin[len(r_bin)-5:]+ "         " + r_bin[len(r_bin)-6:]+ "        " + r_bin[len(r_bin)-7:]+ "       " + r_bin + "       |")
    print("|______________________________________________________________________________________________________________________________|")

def binToDecimal(bin, decimal):
    core.clear()
    binary = str(bin).replace('[', '').replace(']', '').replace(',', '').replace('\'', '')
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|------------------------------------------------- Conversão Binário-Decimal (2^n) --------------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")    
    print("|                                      " + binary +  "                                                                         |")
    print("|                                      | | | | | | | |---------> "+ binary[14] + "*2^0   ---------->     " + str(int(binary[14])*(2**0)) + "                                     |")    
    print("|                                      | | | | | | |-----------> "+ binary[12] + "*2^1   ---------->     " + str(int(binary[12])*(2**1)) + "                                     |")    
    print("|                                      | | | | | |-------------> "+ binary[10] + "*2^2   ---------->     " + str(int(binary[10])*(2**2)) + "                                     |")    
    print("|                                      | | | | |---------------> "+ binary[8] + "*2^3   ---------->     " + str(int(binary[8])*(2**3)) + "                                     |")    
    print("|                                      | | | |-----------------> "+ binary[6] + "*2^4   ---------->     " + str(int(binary[6])*(2**4)) + "                                    |")    
    print("|                                      | | |-------------------> "+ binary[4] + "*2^5   ---------->     " + str(int(binary[4])*(2**5)) + "                                    |")    
    print("|                                      | |---------------------> "+ binary[2] + "*2^6   ---------->     " + str(int(binary[2])*(2**6)) + "                                    |")    
    print("|                                      |-----------------------> "+ binary[0] + "*2^7   ---------->     " + str(int(binary[0])*(2**7)) + " +                                 |")    
    print("|                                                                                    ----------                                |")
    print("|                                                                                       " + str(decimal).zfill(3) + "                                    |")    
    print("|______________________________________________________________________________________________________________________________|")

def ieee754_block(floatPoint, precision):
    core.clear()
    fp = floatPoint.split(' ')
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|---------------------------------------------------- Regra IEEE 754: Exibição ------------------------------------------------|")

    if precision == 'simple':
        print("|______________________________________________________________________________________________________________________________|")
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|                       Sinal             Expoente                                         Mantissa                            |")    
        print("|                       _____ ___________________________________ _________________________________________________________    |")    
        print("|  Precisão Simples    |     |                                   |                                                         |   |")    
        print("|    ------------      |  " + fp[0] + "  |            " + fp[1] + "               |                  " + fp[2] + "                |   |")
        print("|       32-Bit         |_____|___________________________________|_________________________________________________________|   |")    
        print("|                       1-bit               8-bit                                           23-bit                             |")    
        print("|                                                                                                                              |")  
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|______________________________________________________________________________________________________________________________|")
    
    elif precision == 'double':
        print("|______________________________________________________________________________________________________________________________|")
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|                       Sinal             Expoente                                         Mantissa                            |")    
        print("|                       _____ ___________________________________ _________________________________________________________    |")    
        print("|   Precisão Dupla     |     |                                   |                                                         |   |")    
        print("|    ------------      |  " + fp[0] + "  |           " + fp[1] + "             |   " + fp[2] + "  |   |")    
        print("|       64-Bit         |_____|___________________________________|_________________________________________________________|   |")    
        print("|                       1-bit              11-bit                                           52-bit                             |")  
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|______________________________________________________________________________________________________________________________|")

    elif precision == 'quadruple':
        print("|______________________________________________________________________________________________________________________________|")
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|                                                      Sinal       Expoente                                                    |")
        print("|                                                      _____ _____________________                                             |")
        print("|              Precisão Quadrupla                     |     |                     |                                            |")    
        print("|                -------------                        |  " + fp[0] + "  |   " + fp[1] + "   |                                            |")    
        print("|                   128-Bit                           |_____|_____________________|                                            |")    
        print("|                                                      1-bit        15-bit                                                     |")
        print("|                                                                                                                              |")    
        print("|                                                              Mantissa                                                        |")    
        print("|      ___________________________________________________________________________________________________________________     |")    
        print("|     |                                                                                                                   |    |")    
        print("|     | " + fp[2] + " |    |")    
        print("|     |___________________________________________________________________________________________________________________|    |")    
        print("|                                                            113-bit                                                           |")
        print("|                                                                                                                              |")
        print("|______________________________________________________________________________________________________________________________|")

    elif precision == 'octuple':
        print("|______________________________________________________________________________________________________________________________|")
        print("|                                                                                                                              |")
        print("|                                                                                                                              |")
        print("|                                                      Sinal         Expoente                                                  |")
        print("|                                                      _____ ________________________                                          |")
        print("|              Precisão Octupla                       |     |                        |                                         |")
        print("|                -------------                        |  " + fp[0] + "  |  " + fp[1] + "   |                                         |")
        print("|                   256-Bit                           |_____|________________________|                                         |")
        print("|                                                      1-bit          19-bit                                                   |")
        print("|                                                                                                                              |")
        print("|                                                              Mantissa                                                        |")
        print("|      ___________________________________________________________________________________________________________________     |")
        print("|     |                                                                                                                   |    |")
        print("|     | " + fp[2][:113] + " |    |")
        print("|     | " + fp[2][113:226] + " |    |")
        print("|     | " + fp[2][226:] + "                                                                                                       |    |")
        print("|     |___________________________________________________________________________________________________________________|    |")
        print("|                                                            237-bit                                                           |")
        print("|                                                                                                                              |")
        print("|______________________________________________________________________________________________________________________________|")

def binToHexa(bin, hexa):
    core.clear()
    binary = str(bin).replace('[', '').replace(']', '').replace(',', '').replace('\'', '')
    blk = [str((int(binary[14])*(2**0) + int(binary[12])*(2**1) + int(binary[10])*(2**2) + int(binary[8])*(2**3))), str((int(binary[6])*(2**0) + int(binary[4])*(2**1) + int(binary[2])*(2**2) + int(binary[0])*(2**3)))]
    print("|----------------------------------------- LMC: Lógica Matemática Computacional (8 Bits) --------------------------------------|")
    print("|----------------------------------------------------- Versão: 2.1.0 (Python) -------------------------------------------------|")
    print("|---------------------------------------------- Plataformas: Desktop & Raspberry Pi -------------------------------------------|")
    print(" ______________________________________________________________________________________________________________________________ ")
    print("|                                                                                                                              |")    
    print("|------------------------------------------------- Conversão Binário-Hexadecimal ----------------------------------------------|")
    print("|------------------------------------------------- com intermediário para decimal ---------------------------------------------|")
    print("|______________________________________________________________________________________________________________________________|")
    print("|                                                                                                                              |")
    print("|                                      " + binary +  "                                                                         |")
    print("|                                      | | | | | | | |---------> "+ binary[14] + "*2^0   ---------->     " + str(int(binary[14])*(2**0)) + "    }                                |")    
    print("|              Bloco 1                 | | | | | | |-----------> "+ binary[12] + "*2^1   ---------->     " + str(int(binary[12])*(2**1)) + "    }   Decimal                      |")    
    print("|               4-bit                  | | | | | |-------------> "+ binary[10] + "*2^2   ---------->     " + str(int(binary[10])*(2**2)) + "    }     " + blk[0] + "                         |")    
    print("|                                      | | | | |---------------> "+ binary[8] + "*2^3   ---------->     " + str(int(binary[8])*(2**3)) + "    }                                |")    
    print("|    ----------------------------      | | | |                                                 ------------                    |")
    print("|                                      | | | |-----------------> "+ binary[6] + "*2^4   ---------->     " + str(int(binary[6])*(2**0)) + "   }                                 |")    
    print("|              Bloco 2                 | | |-------------------> "+ binary[4] + "*2^5   ---------->     " + str(int(binary[4])*(2**1)) + "   }    Decimal                      |")    
    print("|               4-bit                  | |---------------------> "+ binary[2] + "*2^6   ---------->     " + str(int(binary[2])*(2**2)) + "   }      " + blk[1] + "                         |")    
    print("|                                      |-----------------------> "+ binary[0] + "*2^7   ---------->     " + str(int(binary[0])*(2**3)) + "   }                                 |")    
    print("|                                                                                    ----------                                |")
    print("|                                                                                        " + str(hexa) + "                                    |")    
    print("|______________________________________________________________________________________________________________________________|")